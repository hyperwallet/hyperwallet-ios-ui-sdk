lane :beta do
  version = updateVersion("beta")
  update("beta", version)
end

lane :unit_tests do
  run_tests(
    project: "HyperwalletUISDK.xcodeproj",
    devices: ['iPhone 13 Pro'],
    derived_data_path: './output',
    scheme: "HyperwalletUISDK",
    configuration: 'Debug',
    code_coverage: true,
    xcargs: 'ONLY_ACTIVE_ARCH=YES CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO'
  )
end

lane :ui_tests do
  run_tests(
    project: "HyperwalletUISDK.xcodeproj",
    devices: ['iPhone 13 Pro Max'],
    scheme: "Demo",
    configuration: 'XCUITest',
    # max_concurrent_simulators: 4,
    # parallel_testing: true,
    # build_for_testing: true,
    number_of_retries: 3,
    output_remove_retry_attempts: true,
    xcargs: 'ONLY_ACTIVE_ARCH=NO CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO'
  )
end

test_run_block = lambda do |testrun_info|
  failed_test_count = testrun_info[:failed].size
  passed_test_count = testrun_info[:passing].size
  try_attempt = testrun_info[:try_count]
  batch = testrun_info[:batch]
  # UI.abort _with message! ('You could conditionally abort')
  UI.message( "everything is fine, let's continue try #{try_attempt + 1} for batch #{batch}")
  {
    continue: true,
    only_testing: ['HyperwalletUISDK']
  }
end

sim_callback = lambda do |simulator_device_udid|
  puts "Start streaming system log for device #{simulator_device_udid}"
end

override_scan_options_callback = lambda do |options|
  options.delete(:xctestrun) unless FastlaneCore::Helper.xcode at_least?(10)
end

lane :ui_tests_v2 do
  multi_scan(
    project: File.absolute_path('../HyperwalletUISDK.xcodeproj'),
    devices: ['iPhone 13 Pro Max'],
    scheme: "Demo",
    configuration: 'XCUITest',
    try_count: 3,
    batch_count: 4,
    fail_build: false,
    parallel_testrun_count: 4,
    # testrun_completed_block: test_run_block,
    # simulator_started_callback: sim_callback,
    # override_scan_options_block: override_scan_options_callback,
    output_remove_retry_attempts: true,
    xcargs: 'ONLY_ACTIVE_ARCH=NO CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO'
  )
end

lane :release_beta do
  version = updateVersion("beta")
  message = "Release #{version}"
  add_git_tag(tag: "#{version}", message: "#{message}")
  set_github_release(tag_name: "#{version}", description: "#{message}")
  push_to_git_remote
  pod_push(allow_warnings: true, skip_tests: true)
end

def updateVersion(type)
  version = last_git_tag
  if type == "beta" then
    version_components = version.split("beta")
    last_component = version_components[-1].to_i + 1
    last_component_string = last_component.to_s
    if last_component_string.size == 1 then
      last_component_string = "0" + last_component_string
    end
    version_components[-1] = last_component_string
    build_version = version_components.join("beta")
  end
end

def update(type, version)
  podspec_name = "HyperwalletUISDK.podspec"
  pod_lib_lint(allow_warnings: true, skip_tests: true)
  version_bump_podspec(version_number: version, path: podspec_name)
  git_add(path: [podspec_name, "*.md"])
  git_commit(path: [podspec_name, "*.md"], message: "Release #{version}")
  push_to_git_remote
end
