language: swift
osx_image: xcode11.4
os: osx
branches:
  only:
  - "/.*/"
cache:
  directories:
  - Carthage
env:
  global:
  - LC_CTYPE=en_US.UTF-8
  - LANG=en_US.UTF-8
  - PROJECT=HyperwalletUISDK.xcodeproj
  - IOS_FRAMEWORK_SCHEME="HyperwalletUISDK"
  - IOS_UI_TESTS_SCHEME="Demo"
  matrix:
  - ios_version='13.3'  ios_device='iPhone 11' scheme="$IOS_FRAMEWORK_SCHEME" platform='iOS
    Simulator' configuration="Debug" code_coverage="YES" publish_docs="YES" only_active_arch="YES"
  - ios_version='13.3'  ios_device='iPhone 11' scheme="$IOS_UI_TESTS_SCHEME"  platform='iOS
    Simulator' configuration="XCUITest" code_coverage="NO" publish_docs="NO" only_active_arch="NO"
before_install:
  # Boot the emulator by ID
  - |
     ios_uid=$(xcrun instruments -s devices | grep Simulator | grep "$ios_device ($ios_version)*" | grep -o "[0-9A-F]\{8\}-[0-9A-F]\{4\}-[0-9A-F]\{4\}-[0-9A-F]\{4\}-[0-9A-F]\{12\}")
     xcrun simctl boot $ios_uid
  # List all emulator available
  - xcrun simctl list
  # Update the brew and build dependencies tools
  # - brew outdated carthage || brew upgrade carthage
  - Carthage update --platform iOS  --cache-builds
  - gem i slather
  # Install build output formatting tool
  - gem install xcpretty
  # Force to update the Swiftlint to the last stable version
  - brew outdated swiftlint || brew upgrade swiftlint
  # Print the swiftlint version
  - swiftlint version
  # Installing Jazzy
  - gem install jazzy
  # Installing Sourcekitten
  - brew install sourcekitten
script: |
  set -o pipefail
  set -e

  # Define the destination emulator
  destination="platform=$platform,OS=$ios_version,name=$ios_device"

  # Build and test Framework in Debug
  xcodebuild -enableCodeCoverage "$code_coverage" clean build test -project "$PROJECT" \
    -scheme "$scheme" \
    -destination "$destination" \
    -configuration "$configuration" ONLY_ACTIVE_ARCH="$only_active_arch" ENABLE_TESTABILITY=YES CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO \
    | xcpretty --color

  # Lint - Add `--strict` to fail for warning and violation
  swiftlint lint --strict --reporter json
after_success:
- |
  if [ "$code_coverage" == "YES" ]; then
      slather;
  fi
  if [ "$publish_docs" == "YES" ]; then
      if [ $TRAVIS_BRANCH = 'master' ] && [ $TRAVIS_PULL_REQUEST = 'false' ]; then
          make docs;
          sh ./Scripts/travisPublishDocs.sh;
      fi
  fi
